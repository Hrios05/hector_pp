@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #000000;
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

body {
  background-color: var(--background);
  color: var(--foreground);
  font-family: var(--font-sans), Arial, Helvetica, sans-serif;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
}

header {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 3rem;
  /* Increase gap between items */
  padding: 0.5rem;
  max-width: 600px;
  width: 100%;
  margin-top: 3rem;
  border: 1px solid #e5e5e5;
  border-radius: 12px;
  background-color: #ffffff;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

header .divider {
  width: 1px;
  height: 24px;
  background-color: #e5e5e5;
}

main {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  text-align: left;
  padding: 2rem;
  max-width: 600px;
  width: 100%;
  margin-top: 6rem;
}

footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  max-width: 800px;
  width: 100%;
}

button {
  border: none;
  border-radius: 12px;
  padding: 1rem 1.5rem;
  cursor: pointer;
  width: 160px;
  transition: background-color 0.3s ease;
  font-weight: 500;
  /* Make the text slightly thicker */
}

button:hover {
  background-color: var(--foreground);
  color: var(--background);
}

#resume {
  padding: 0.25rem 1rem;
  width: 120px;
  height: 50px;
  /* Smaller height */
  font-size: 0.875rem;
  border-radius: 12px;
  /* Match text size */
  position: relative;
  z-index: 1;
}

#resume::before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  border: 2px solid var(--foreground);
  border-radius: 12px;
  /* Match button's border radius */
  z-index: 0;
}

#open-opportunities {
  padding: 0rem 1rem;
  /* Smaller height */
  font-size: 0.875rem;
  border-radius: 100px;
  width: 200px;
  height: 50px;
  /* Match text size */
  background-color: rgba(57, 255, 20, 0.2);
  /* Neon light green transparent background */
  backdrop-filter: blur(5px);
  /* Backdrop blur effect */
  border: 1px solid rgba(57, 255, 20, 0.5);
  /* Adjust border to match neon green */
  color: #006400;
  /* Dark green font color */
}

#send-email-button {
  background-color: #18181b;
  /* Default background color */
  color: white;
  /* Text color */
}

#send-email-button:hover {
  background-color: black;
  /* Hover background color */
}

#send-email-button:focus {
  outline: 2px solid black;
  /* Focus outline */
  outline-offset: 2px;
}

.animate-fade-in {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 1s ease, transform 1s ease;
}

.opacity-0 {
  opacity: 0;
}

.translate-y-10 {
  transform: translateY(2.5rem);
}

.puzzle-piece {
  position: relative;
  clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  background-color: var(--puzzle-color, #ccc);
  /* Default color */
}

.puzzle-piece:nth-child(1) {
  --puzzle-color: #8B4513;
  /* SaddleBrown */
}

.puzzle-piece:nth-child(2) {
  --puzzle-color: #A0522D;
  /* Sienna */
}

.puzzle-piece:nth-child(3) {
  --puzzle-color: #CD853F;
  /* Peru */
}

.puzzle-piece:nth-child(4) {
  --puzzle-color: #D2B48C;
  /* Tan */
}

.puzzle-piece:nth-child(5) {
  --puzzle-color: #556B2F;
  /* DarkOliveGreen */
}

.puzzle-piece:nth-child(6) {
  --puzzle-color: #6B8E23;
  /* OliveDrab */
}

.puzzle-piece:nth-child(7) {
  --puzzle-color: #8FBC8F;
  /* DarkSeaGreen */
}

.puzzle-piece:nth-child(8) {
  --puzzle-color: #2E8B57;
  /* SeaGreen */
}

.puzzle-piece:nth-child(9) {
  --puzzle-color: #3CB371;
  /* MediumSeaGreen */
}

.puzzle-piece:nth-child(10) {
  --puzzle-color: #228B22;
  /* ForestGreen */
}

.puzzle-piece:hover {
  transform: scale(1.1);
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}

.puzzle-piece:nth-child(odd) {
  clip-path: polygon(25% 0%, 75% 0%, 100% 25%, 100% 75%, 75% 100%, 25% 100%, 0% 75%, 0% 25%);
}

.puzzle-piece:nth-child(even) {
  clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
}